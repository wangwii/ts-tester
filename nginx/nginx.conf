# nginx运行的用户名
user nginx;

# nginx启动进程,通常设置成和cpu的数量相等，这里为自动
worker_processes auto;

# errorlog文件位置
error_log  /var/log/nginx/error.log warn;

# pid文件地址，记录了nginx的pid，方便进程管理
pid        /var/run/nginx.pid;

# 工作模式和连接数上限
events {
    # 每个worker_processes的最大并发链接数
    # 并发总数：worker_processes * worker_connections
    worker_connections 1024;
}

# 提供http服务相关的配置参数
http {
    # 引入文件扩展名与文件类型映射表
    include       /etc/nginx/mime.types;

    # 默认文件类型
    default_type  application/octet-stream;

    # 设置日志的格式
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    # access_log记录用户访问的页面、浏览器、ip等信息
    access_log  /var/log/nginx/access.log  main;

    # 关于sendfile选项：
    #    一般的网络传输过程：硬盘 >> kernel buffer >> user buffer>> kernel socket buffer >>协议栈
    #   启用sendfile 后是：硬盘 >> kernel buffer >>协议栈，可以显著提高传输性能。
    sendfile        on;

    # Nagle算法：程序接收到了数据包后不会马上发出，而是等待数据包最大时一次性发出，
    # 启用Nagle算法
    # tcp_nopush      on; 
    # 禁用Nagle算法
    tcp_nodelay       on;
    
    # 连接超时时间
    keepalive_timeout 65;

    # 启用gzip 压缩
    #gzip  on;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;
}
